name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
      
env:
        MONGO_URI: ${{ vars.MONGO_URI }}
        MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
        MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Unit Testing
        strategy:
            matrix:
                nodejs_version: [18,19]
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{ matrix.nodejs_version}}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version}}

        - name: cache dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test

        - name: test result
          uses: actions/upload-artifact@v1
          with:
            name: testfiles
            path: test-results.xml
    
    code-coverage:
        name: coverage
        runs-on: ubuntu-latest
        steps:
        - name: checkourt repsoitory
          uses: actions/checkout@v4

        - name: setup nodejs version
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version}}
        
        - name: install dependencies
          run: npm install

        - name: check code coverage
          continue-on-error: true
          run: npm run coverage

        - name: code-coverage
          uses: actions/upload-artifact@v1
          with:
            name: codecoverage
            path: coverage

    Docker-login:
      name: containerization
      needs: [unit-testing, code-coverage]

      permissions:
        packages: write

      runs-on: ubuntu-latest
      steps:
      -  name: Login to Docker Hub
         uses: docker/login-action@v3
         with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      -  name: Login to ghcr
         uses: docker/login-action@v3
         with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: checkourt repsoitory
        uses: actions/checkout@v4   

      - name: docker build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
        

      - name: docker image testing
        run: |
            docker images
            docker run --name solar-system -d \
              -p 3000:3000 \
              -e MONGO_URI=$MONGO_URI \
              -e MONGO_USERNAME=$MONGO_USERNAME \
              -e MONGO_PASSWORD=$MONGO_PASSWORD \
              ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
        

      - name: Deploy to AWS EC2
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
            
      - name: Install Docker on EC2 instance
        run: |
           ssh -i /var/www/html/githubactions.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'sudo apt-get update && sudo apt-get install -y docker.io'
            
      - name: Run Docker commands on EC2 instance
        run: |
          ssh -i /var/www/html/githubactions.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} 'docker pull ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }} && docker run -d -p 3000:3000 ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}'
            